version: "3"
services:
  message1:
    image: message1
    build: message/
    restart: always
    ports:
      - 80
    links:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
    depends_on:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
    deploy:
      replicas: 4
    volumes:
      - "./message:/app"
    environment:
      - SERVICE_NAME=service-v1
  message_canary:
    image: message_canary
    build: message_v2/
    restart: always
    ports:
      - 80
    links:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
    depends_on:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
    deploy:
      replicas: 4
    volumes:
      - "./message:/app"
    environment:
      - SERVICE_NAME=service-v2
  credit:
    image: credit
    build: credit/
    restart: always
    ports:
      - "9017:9017"
    links:
      - mongodb_credit
      - replica_credit
      - redis
    depends_on:
      - mongodb_credit
      - replica_credit
      - redis
    volumes:
      - "./credit:/app"
  messageapp:
    image: cabify/backend-bootcamp-messageapp
    ports:
      - "3000:3000"
  mongodb_credit:
    image: mongo
    command: mongod --port 27017
    volumes:
      - ./credit/data/db:/credit/data/db
    ports:
      - 27017:27017
  replica_credit:
    image: mongo
    command: mongod --port 27018
    volumes:
      - ./credit/data/replica:/credit/data/replica
    ports:
      - 27018:27018
  mongodb_message:
    image: mongo
    command: mongod --port 27027
    volumes:
      - ./message/data/db:/message/data/db
    ports:
      - 27027:27027
  replica_message:
    image: mongo
    command: mongod --port 27028
    volumes:
      - ./message/data/replica:/message/data/replica
    ports:
      - 27028:27028
  redis:
    image: redis
    ports:
      - 6379:6379
  #haproxy:
    #build: ./haproxy
    #ports:
      #- 8080:8080
    #depends_on:
      #- message1
  registrator:
    image: gliderlabs/registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: -internal consul://consul:8500
    depends_on:
      - consul
    links:
      - consul
  consul: 
    image: consul
    command: "agent -server -bootstrap -ui -client=0.0.0.0 -bind='{{ GetPrivateIP }}'"
  balancer:
    image: haproxy:1.8-alpine
    depends_on:
      - registrator
      - message1
    links:
      - registrator
    volumes: 
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 48151:48151
